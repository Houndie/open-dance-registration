syntax = "proto3";
package proto;

import "queries.proto";

service RegistrationService {
	rpc UpsertRegistrations(UpsertRegistrationsRequest) returns (UpsertRegistrationsResponse) {}
	rpc QueryRegistrations(QueryRegistrationsRequest) returns (QueryRegistrationsResponse) {}
	rpc DeleteRegistrations(DeleteRegistrationsRequest) returns (DeleteRegistrationsResponse) {}
}

message UpsertRegistrationsRequest {
	repeated Registration registrations = 1;
}

message UpsertRegistrationsResponse {
	repeated Registration registrations = 1;
}

message QueryRegistrationsRequest {
	RegistrationQuery query = 1;
}

message QueryRegistrationsResponse {
	repeated Registration registrations = 1;
}

message DeleteRegistrationsRequest {
	repeated string ids = 1;
}

message DeleteRegistrationsResponse {}

message Registration {
	string id = 1;
	string event_id = 2;
	repeated RegistrationItem items = 3;
}

message RegistrationItem {
	string schema_item_id = 1;
	string value = 2;
}

message RegistrationQuery {
	oneof query {
		StringQuery id = 1;
		StringQuery event_id = 2;
		CompoundRegistrationQuery compound = 3;
	}
}

message CompoundRegistrationQuery {
	enum Operator {
		AND = 0;
		OR = 1;
	}

	Operator operator = 1;
	repeated RegistrationQuery queries = 2;
}
