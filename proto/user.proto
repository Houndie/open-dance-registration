syntax = "proto3";
package proto;

import "google/protobuf/empty.proto";
import "queries.proto";

service UserService {
	rpc UpsertUsers(UpsertUsersRequest) returns (UpsertUsersResponse) {}
	rpc QueryUsers(QueryUsersRequest) returns (QueryUsersResponse) {}
	rpc DeleteUsers(DeleteUsersRequest) returns (DeleteUsersResponse) {}
}

message UpsertUsersRequest {
	repeated User users = 1;
}

message UpsertUsersResponse {
	repeated User users = 1;
}

message QueryUsersRequest {
	// leave empty to fetch all users
	UserQuery query = 1;
}

message QueryUsersResponse {
	repeated User users = 1;
}

message DeleteUsersRequest {
	repeated string ids = 1;
}

message DeleteUsersResponse {}

message User {
	string id = 1;
	string email = 2;

	oneof password {
		string set = 3;
		google.protobuf.Empty unset = 4;
		google.protobuf.Empty unchanged = 5;
	}
	string display_name = 6;
}

message UserQuery {
	oneof query {
		StringQuery email = 1;
		CompoundUserQuery compound = 2;
	}
}

message EmailQuery {
	oneof operator {
		string equals = 1;
		string not_equals = 2;
	}
}

message CompoundUserQuery {
	enum Operator {
		AND = 0;
		OR = 1;
	}
	Operator operator = 1;
	repeated UserQuery queries = 2;
}
